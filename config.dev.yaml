# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: 1

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 250

# Logger info
logging:
  level: info
  streams:
    - type: debug
#  streams:
#  # Use gelf-stream -> logstash
#  - type: gelf
#    host: logstash1003.eqiad.wmnet
#    port: 12201

# Statsd metrics reporter
# metrics:
#   type: log
#   host: localhost
#   port: 8125

services:
  - name: eventstreams
    # a relative path or the name of an npm package, if different from name
    module: ./app.js
    # optionally, a version constraint of the npm package
    # version: ^0.4.0
    # per-service config
    conf:
      port: 8092
      # interface: localhost # uncomment to only listen on localhost
      # more per-service config settings
      # the location of the spec, defaults to spec.yaml if not specified
      spec: ./spec.yaml
      # allow cross-domain requests to the API (default '*')
      cors: '*'

      # Connection limiting.  EventStreams connections are
      # expected to be long lived, so we can't use typical
      # connections per second type ratelimiting.  Instead,
      # we limit the number of connections per X-Client-IP.
      client_ip_connection_limit: 2

      # Send metrics about the number of open stream connections this often.
      statistics_interval_ms: 5000
      # Stream routes configuration.  Each key in this object will be a route path at
      # /v2/stream/{stream_name}, and each stream config object should configure a list of
      # topics to be included in that stream.
      # This should match the /v2/stream/ routes configrued in spec.yaml.
      # In production, the stream routes in spec.yaml are dynamically generated
      # from this config object.
      streams:
        test:
          description: "Test event stream. Schema: https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/test/event"
          topics: [datacenter1.test.event]
        page-create:
          topics: [datacenter1.mediawiki.page-create]
        page-delete:
          topics: [datacenter1.mediawiki.page-delete]
        page-move:
          topics: [datacenter1.mediawiki.page-move]
        page-undelete:
          topics: [datacenter1.mediawiki.page-undelete]
        page-properties-change:
          topics: [datacenter1.mediawiki.page-properties-change]
        revision-create:
          topics: [datacenter1.mediawiki.revision-create]
        recentchange:
          topics: [datacenter1.mediawiki.recentchange]

      # kafka configs go here.
      kafka:
        metadata.broker.list: 'localhost:9092'
        statistics.interval.ms: 5000

