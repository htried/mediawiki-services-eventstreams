swagger: '2.0'
info:
  version: 0.0.2
  title: Wikimedia EventStreams
  description: Streaming Wikimedia event data over HTTP SSE / EventSource
  termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use
  license:
    name: Apache2
    url: http://www.apache.org/licenses/LICENSE-2.0
externalDocs:
  url: https://wikitech.wikimedia.org/wiki/EventStreams

definitions:
  Last-Event-ID:
    name: Last-Event-ID
    in: header
    description: >
      Specifies the Kafka topics, partitions and offsets from which to begin
      streaming. You may not specify topics that are not configured
      to be part of this stream endpoint.
      Example: [{topic: datacenter1.topic, partition: 0, offset: 12345}, ...]
    type: array

paths:

  /v2/stream/{streams}:
    get:
      tags:
        - Streams
      summary: Subscribe to one or multiple streams.
      description: >
        Use this route to subscribe to a comma separated list of configured streams.
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8


  # NOTE:  Each /v2/stream/ route you list here should also
  # have a corresponding entry in the app config.yaml streams object that specifies
  # the topics that belong to each of these streams.  In production, the swagger spec
  # stream paths are dynamically populated during deployment based on the streams configuration,
  # and response schema $refs will point at local file paths into the mediawiki/event-schemas repository.

  /v2/stream/page-create:
    get:
      tags:
        - Streams
      summary: mediawiki/page/create event
      description: >
        mediawiki.page-create event
        https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/mediawiki/page/create
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8
      responses:
        default:
          description: mediawiki/page/create
          schema:
            "$ref": "http://localhost:8092/v2/schema/mediawiki/page/create"

  /v2/stream/page-delete:
    get:
      tags:
        - Streams
      summary: mediawiki/page/delete event
      description: >
        mediawiki.page-delete event
        https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/mediawiki/page/delete
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8
      responses:
        default:
          description: mediawiki/page/delete
          schema:
            "$ref": "http://localhost:8092/v2/schema/mediawiki/page/delete"

  /v2/stream/page-undelete:
    get:
      tags:
        - Streams
      summary: mediawiki/page/undelete event
      description: >
        mediawiki.page-undelete event
        https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/mediawiki/page/undelete
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8
      responses:
        default:
          description: mediawiki/page/undelete
          schema:
            "$ref": "http://localhost:8092/v2/schema/mediawiki/page/undelete"

  /v2/stream/page-properties-change:
    get:
      tags:
        - Streams
      summary: mediawiki/page/properties-change event
      description: >
        mediawiki.page-properties-change event
        https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/mediawiki/page/properties-change
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8
      responses:
        default:
          description: mediawiki/page/properties-change
          schema:
            "$ref": "http://localhost:8092/v2/schema/mediawiki/page/properties-change"

  /v2/stream/revision-create:
    get:
      tags:
        - Streams
      summary: mediawiki/revision/create event
      description: >
        mediawiki.revision-create event
        https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/mediawiki/revision/create
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8
      responses:
        default:
          description: mediawiki/revision/create
          schema:
            "$ref": "http://localhost:8092/v2/schema/mediawiki/revision/create"

  /v2/stream/revision-score:
    get:
      tags:
        - Streams
      summary: mediawiki/revision/score event
      description: >
        mediawiki.revision-score event
        https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/mediawiki/revision/score
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8
      responses:
        default:
          description: mediawiki/revision/score
          schema:
            "$ref": "http://localhost:8092/v2/schema/mediawiki/revision/score"

  /v2/stream/recentchange:
    get:
      tags:
        - Streams
      summary: mediawiki/recentchange event
      description: >
        Mediawiki RecentChanges feed.
        Schema: https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/mediawiki/recentchange
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8
      responses:
        default:
          description: mediawiki/recentchange
          schema:
            "$ref": "http://localhost:8092/v2/schema/mediawiki/recentchange"


  /v2/stream/test:
    get:
      tags:
        - Streams
      summary: test/event event
      description: >
        Test event stream.
        Schema: https://github.com/wikimedia/mediawiki-event-schemas/tree/master/jsonschema/test/event
      parameters:
        - "$ref": "#/definitions/Last-Event-ID"
      produces:
        - text/event-stream; charset=utf-8
      responses:
        default:
          description: test/event
          schema:
            "$ref": "http://localhost:8092/v2/schema/test/event"

  # TODO: Add more mediawiki event (and other) stream routes as needed.


  /v2/schema/{schema_uri}:
    get:
      tags:
        - Schema
      summary: Get a schema by its relative schema_uri
      description: Returns the JSONSchema for the given relative schema_uri.
      parameters:
        - name: schema_uri
          description: Relative schema_uri to an event JSONschema
          in: path
          required: true
          type: string
          default: mediawiki/recentchange
      produces:
        - application/json; charset=utf-8
      x-amples:
        - title: Get the mediawiki/recentchange schema
          request:
            params:
              schema_uri: mediawiki/recentchange
          response:
            status: 200
            headers:
              content-type: application/json

  # from routes/info.js
  /_info:
    get:
      tags:
        - Service information
      description: Gets information about the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service info
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              name: /.+/
              description: /.+/
              version: /.+/
              home: /.+/
  /_info/name:
    get:
      tags:
        - Service information
      description: Gets the name of the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service name
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              name: /.+/
  /_info/version:
    get:
      tags:
        - Service information
      description: Gets the running version of the service
      produces:
        - application/json
      x-amples:
        - title: retrieve service version
          request: {}
          response:
            status: 200
            headers:
              content-type: application/json
            body:
              version: /.+/
